<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd " 
        version="2.5"> 

  	<jsp-config>
		<jsp-property-group>
			<description>      
            Special property group for JSP Configuration JSP example.   
        	</description>
			<display-name>JSPConfiguration</display-name>
			<url-pattern>*.jsp</url-pattern>
			<el-ignored>false</el-ignored>
			<page-encoding>UTF-8</page-encoding>
			<scripting-invalid>false</scripting-invalid>
			<include-prelude></include-prelude>
			<include-coda></include-coda>
		</jsp-property-group>
	</jsp-config>

	<display-name>springmvc</display-name>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>auth.root</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:/config/spring/applicationContext.xml
		</param-value>
	</context-param>

	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:/log4j.properties</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<!--防止发生java.beans.Introspector内存泄露,应将它配置在ContextLoaderListener的前面 -->
	<!--详细描述见http://blog.csdn.net/jadyer/article/details/11991457 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!--实例化Spring容器 -->
	<!--应用启动时,该监听器被执行,它会读取Spring相关配置文件,其默认会到WEB-INF中查找applicationContext.xml -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
	</listener>

	<!-- shiro权限验证filter start -->
	<!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
	<filter> 
		<filter-name>shiroFilter</filter-name> 
		<filter-class> org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		<init-param> 
			<param-name>targetFilterLifecycle</param-name> 
			<param-value>true</param-value> 
		</init-param> 
	</filter> 
	<filter-mapping> 
		<filter-name>shiroFilter</filter-name> 
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- SiteMesh -->
	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>
			com.opensymphony.sitemesh.webapp.SiteMeshFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 字符集转换filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/config/spring/springmvc-servlet.xml</param-value>
		</init-param>
		<!-- 容器加载时初始化 -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- 随机验证码 -->
	<servlet>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<servlet-class>
			com.unisk.zc.core.servlet.ValidateCodeServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ValidateCodeServlet</servlet-name>
		<url-pattern>/servlet/validateCodeServlet</url-pattern>
	</servlet-mapping>
	
	<!-- 手机验证码 -->
	<servlet>
		<servlet-name>ValidatePhoneCodeServlet</servlet-name>
		<servlet-class>
			com.unisk.zc.core.servlet.ValidatePhoneCodeServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ValidatePhoneCodeServlet</servlet-name>
		<url-pattern>/servlet/validatePhoneCodeServlet</url-pattern>
	</servlet-mapping>
	
	<!-- 发送验证码 -->
	<servlet>
		<servlet-name>SendPhoneCodeServlet</servlet-name>
		<servlet-class>
			com.unisk.zc.core.servlet.SendPhoneCodeServlet
		</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SendPhoneCodeServlet</servlet-name>
		<url-pattern>/servlet/sendPhoneCodeServlet</url-pattern>
	</servlet-mapping>
	
	<!-- 沃众筹微信公告 -->
	<servlet>
		<servlet-name>weixinHttpServlet</servlet-name>
		<servlet-class>com.unisk.wechat.web.servlet.WechatNoticeHttpServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>weixinHttpServlet</servlet-name>
		<url-pattern>/wechat/enter</url-pattern>
	</servlet-mapping>
	
	<!-- 沃众筹微信公告 -->
	<servlet>
		<servlet-name>weixinVoteHttpServlet</servlet-name>
		<servlet-class>com.unisk.wechat.web.servlet.WechatVoteHttpServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>weixinVoteHttpServlet</servlet-name>
		<url-pattern>/wechat/vote</url-pattern>
	</servlet-mapping>
	
</web-app>
